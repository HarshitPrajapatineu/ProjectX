/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.customerScreen;

import com.db4o.ObjectSet;
import model.PackageManagementEnterprise.Franchise;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import view.packageCreationScreen;
import DBConnection.DBConnect;
import model.Customer;

/**
 *
 * @author aishwaryanagaraj
 */
public class customerSearchScreen extends javax.swing.JPanel {

    JPanel userProcessPanel;
    DBConnect dbConnect;
    Customer sessionUser;

    public customerSearchScreen(JPanel userProcessPanel, Customer sessionUser) {
        initComponents();
        this.userProcessPanel = userProcessPanel;
        dbConnect = new DBConnect();
        this.sessionUser=sessionUser;
        populateCityDropdown();
        populateFranchiseTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        cityDropdown = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nearbyServiesTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        bookButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(866, 510));
        setMinimumSize(new java.awt.Dimension(866, 510));
        setPreferredSize(new java.awt.Dimension(866, 510));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Search nearby services");

        cityDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityDropdownActionPerformed(evt);
            }
        });

        jLabel10.setText("City:");

        nearbyServiesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Franchise Name", "Address", "Phone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        nearbyServiesTable.setSelectionBackground(new java.awt.Color(255, 204, 204));
        jScrollPane1.setViewportView(nearbyServiesTable);

        searchButton.setBackground(new java.awt.Color(255, 204, 204));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        bookButton.setBackground(new java.awt.Color(255, 204, 204));
        bookButton.setText("Book");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(bookButton)
                .addContainerGap(98, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) nearbyServiesTable.getModel();
        model.setRowCount(0);
        int selectedIndex = cityDropdown.getSelectedIndex();
        Franchise franchiseExample = new Franchise();
        try {
            ObjectSet result = dbConnect.queryByExample(franchiseExample);
            ArrayList<Franchise> list = new ArrayList<>();
            Object[] arr = result.toArray();
            for (Object o : arr) {
                Franchise f = (Franchise) o;
                if (f.getCity() == selectedIndex) {
                    list.add(f);
                }
            }
            for (Franchise franchise : list) {
                Object[] row = new Object[4];
                row[0] = franchise;
                row[1] = franchise.getAddress();
                row[2] = franchise.getPhoneNumber();
                row[3] = franchise.getEmail();
                model.addRow(row);
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        packageCreationScreen packCreateScreenScreen = new packageCreationScreen(userProcessPanel,sessionUser);
        userProcessPanel.add("packageCreationScreen", packCreateScreenScreen);
        CardLayout layout = (CardLayout) userProcessPanel.getLayout();
        layout.next(userProcessPanel);
    }//GEN-LAST:event_bookButtonActionPerformed

    private void cityDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityDropdownActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookButton;
    private javax.swing.JComboBox<String> cityDropdown;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable nearbyServiesTable;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

    private void populateCityDropdown() {
        for (Object city : common.Enum.City.values()) {
            cityDropdown.addItem(city.toString());

        }
    }

    private void populateFranchiseTable() {
        DefaultTableModel model = (DefaultTableModel) nearbyServiesTable.getModel();
        model.setRowCount(0);
//        int selectedIndex = cityDropdown.getSelectedIndex();
        Franchise franchiseExample = new Franchise();
        try {
            dbConnect.open();
            ObjectSet result = dbConnect.queryByExample(franchiseExample);
            ArrayList<Franchise> list = new ArrayList<>();
            Object[] arr = result.toArray();
            dbConnect.close();
            for (Object o : arr) {
                Franchise f = (Franchise) o;
                list.add(f);
            }
            for (Franchise franchise : list) {
                Object[] row = new Object[4];
                row[0] = franchise;
                row[1] = franchise.getAddress();
                row[2] = franchise.getPhoneNumber();
                row[3] = franchise.getEmail();
                model.addRow(row);
            }
        } catch (Exception e) {

        }

    }
}
